2021-06-07 wyq:
* 对scanner.l的格式做微调 (scanner.l)
* 增加了十六进制、八进制和浮点数，字符，字符串常量的词法分析 (scanner.l)
* 增加了primary expression和profix expression的句法分析 (parser.y)
* 初步尝试增加了AST中对应的primary expression和profix expression类，以及增加了visitor中primary expression的codegen
* 尚不能编译

关于expression:
yacc grammar中，从primary_expression到expression这一部分语法描述了一种自顶向下的运算优先级
在前面的语法代表优先级高的运算。
expression部分的codegen关键是计算出expression的llvm::Value，这个过程中也可能包含了一些其他的操作
我写ast类的时候，想法是用一个枚举类记录这个ast expr node用了哪条语法规则进行推导，然后codegen根据类型
和成员计算出llvm::Value，成员一般是推导中可能得到的后续项 

-------

2021-06-08 wyq:
* 修复了一些primary expression的Bug，调整后可以编译
* 完成了primary expression
* 尝试增加postfix expression,AST还没有完成
* 为了测试把codegenProgram的顶层模块改成primary expression了

// 读变量要用create load

-------

2021-06-08 wby:
* 完成了 primary_expr 到 expr 的所有第一项规约(没有具体实现，仅包含各个节点的构造和父节点对子节点 codegen 的调用)
* codegenProgram 的顶层模块目前为 expr，parser 从 translation_unit 开始，直接规约至 expr，然后一层一层向下直到最底层
* 后续工作可以暂时分成两个比较独立的部分：1. expr 部分的完善; 2. 接着从 expr 向上做

-------

2021-06-09 wyq:
* 增加了变量声明功能。由于现在还没有函数概念，暂时仅增加了全局变量。
* 初步增加了从external_declaration以下变量声明的一系列规约项
* 把原来的visitor中变量符号表locals修改成了符号表的栈，以便后续局部变量和全局变量的区分
* codegenProgram的顶层模块现在是translation_unit，后续该规则应该无需再更改

-------

2021-06-10 wby:
* Add operators: `+` `-` `*` `/` `%` `==` `!=` `<` `>` `<=` `>=` `&&` `||`

-------

2021-06-11 - 06-12 wyq:
* 增加函数声明，包括含参的和不含参的
* 增加局部变量声明和局部环境栈
* 调整了ast.h和parser.y的格式
* 修改了postfix expr的写法

------

2021-06-12 wyq:
* 修正了变量调用的方式
* 增加了函数调用
// TODO: 声明变量的时候检查参数重名
// TODO: 退出函数定义时修改insert point

------

2021-06-13 wyq:
* 增加了函数返回值
* 修改了变量调用的方式：使用Variable class
* 增加了用于生成机器码的测试脚本test.sh